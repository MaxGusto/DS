{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1Grr_v4VozxM1HfoJ3n4MSDsd4vGq0--l","timestamp":1697982649079}],"mount_file_id":"1MyqrU4qSA4fHhEYB76BOgRF0DTDasT3A","authorship_tag":"ABX9TyPIoQcKDsol/t6lij4lRWNl"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"id":"KoPNP2-UEiY3","executionInfo":{"status":"ok","timestamp":1697982700295,"user_tz":-180,"elapsed":966,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}}},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","import matplotlib.pyplot as plt\n","import seaborn as sns\n","from sklearn.model_selection import train_test_split\n","from sklearn import metrics\n","from sklearn.linear_model import LinearRegression\n","\n","df = pd.read_csv ('/content/drive/MyDrive/Colab Notebooks/ebw_data.csv')"]},{"cell_type":"markdown","source":["#Изучение данных"],"metadata":{"id":"kFV1r2tohqOh"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"nu18ArZCeEIN","executionInfo":{"status":"ok","timestamp":1697982703656,"user_tz":-180,"elapsed":273,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"8bf917fd-698a-497d-face-88a3109abf48"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   IW   IF   VW  FP  Depth  Width\n","0  47  139  4.5  80   1.60   2.54\n","1  47  139  4.5  80   1.62   2.50\n","2  47  139  4.5  80   1.68   2.60\n","3  47  139  4.5  80   1.58   2.52\n","4  45  140  4.5  80   1.76   2.48"],"text/html":["\n","  <div id=\"df-6aec231a-cc6b-4f5a-84aa-a2ccbe420370\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IW</th>\n","      <th>IF</th>\n","      <th>VW</th>\n","      <th>FP</th>\n","      <th>Depth</th>\n","      <th>Width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>47</td>\n","      <td>139</td>\n","      <td>4.5</td>\n","      <td>80</td>\n","      <td>1.60</td>\n","      <td>2.54</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>47</td>\n","      <td>139</td>\n","      <td>4.5</td>\n","      <td>80</td>\n","      <td>1.62</td>\n","      <td>2.50</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>47</td>\n","      <td>139</td>\n","      <td>4.5</td>\n","      <td>80</td>\n","      <td>1.68</td>\n","      <td>2.60</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>47</td>\n","      <td>139</td>\n","      <td>4.5</td>\n","      <td>80</td>\n","      <td>1.58</td>\n","      <td>2.52</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>45</td>\n","      <td>140</td>\n","      <td>4.5</td>\n","      <td>80</td>\n","      <td>1.76</td>\n","      <td>2.48</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6aec231a-cc6b-4f5a-84aa-a2ccbe420370')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6aec231a-cc6b-4f5a-84aa-a2ccbe420370 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6aec231a-cc6b-4f5a-84aa-a2ccbe420370');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-81e326b1-dfe6-4694-8ed8-8c8ac892d7ef\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-81e326b1-dfe6-4694-8ed8-8c8ac892d7ef')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-81e326b1-dfe6-4694-8ed8-8c8ac892d7ef button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":3}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"af0C3wqVeHAl","executionInfo":{"status":"ok","timestamp":1697982704826,"user_tz":-180,"elapsed":3,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"93231ef1-c5e9-42e4-a1aa-7c21351a62c9"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              IW          IF         VW          FP      Depth      Width\n","count  72.000000   72.000000  72.000000   72.000000  72.000000  72.000000\n","mean   45.666667  141.333333   8.638889   78.333333   1.195556   1.970417\n","std     1.678363    5.145763   2.061078   21.493530   0.225081   0.279040\n","min    43.000000  131.000000   4.500000   50.000000   0.800000   1.680000\n","25%    44.000000  139.000000   8.000000   60.000000   1.080000   1.760000\n","50%    45.500000  141.000000   9.000000   80.000000   1.200000   1.840000\n","75%    47.000000  146.000000  10.000000   80.000000   1.290000   2.050000\n","max    49.000000  150.000000  12.000000  125.000000   1.760000   2.600000"],"text/html":["\n","  <div id=\"df-55022d1f-0661-4617-8649-38a231063a66\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IW</th>\n","      <th>IF</th>\n","      <th>VW</th>\n","      <th>FP</th>\n","      <th>Depth</th>\n","      <th>Width</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>45.666667</td>\n","      <td>141.333333</td>\n","      <td>8.638889</td>\n","      <td>78.333333</td>\n","      <td>1.195556</td>\n","      <td>1.970417</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.678363</td>\n","      <td>5.145763</td>\n","      <td>2.061078</td>\n","      <td>21.493530</td>\n","      <td>0.225081</td>\n","      <td>0.279040</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>43.000000</td>\n","      <td>131.000000</td>\n","      <td>4.500000</td>\n","      <td>50.000000</td>\n","      <td>0.800000</td>\n","      <td>1.680000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>44.000000</td>\n","      <td>139.000000</td>\n","      <td>8.000000</td>\n","      <td>60.000000</td>\n","      <td>1.080000</td>\n","      <td>1.760000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>45.500000</td>\n","      <td>141.000000</td>\n","      <td>9.000000</td>\n","      <td>80.000000</td>\n","      <td>1.200000</td>\n","      <td>1.840000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>47.000000</td>\n","      <td>146.000000</td>\n","      <td>10.000000</td>\n","      <td>80.000000</td>\n","      <td>1.290000</td>\n","      <td>2.050000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>49.000000</td>\n","      <td>150.000000</td>\n","      <td>12.000000</td>\n","      <td>125.000000</td>\n","      <td>1.760000</td>\n","      <td>2.600000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-55022d1f-0661-4617-8649-38a231063a66')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-55022d1f-0661-4617-8649-38a231063a66 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-55022d1f-0661-4617-8649-38a231063a66');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-fd5da4d7-20d7-4fb2-8d70-cc55d5293ba6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fd5da4d7-20d7-4fb2-8d70-cc55d5293ba6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-fd5da4d7-20d7-4fb2-8d70-cc55d5293ba6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"nlb3_1sTeJ3N","executionInfo":{"status":"ok","timestamp":1697982706081,"user_tz":-180,"elapsed":2,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"16c55caa-a69d-4ba3-ba91-97d7be188d41"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 72 entries, 0 to 71\n","Data columns (total 6 columns):\n"," #   Column  Non-Null Count  Dtype  \n","---  ------  --------------  -----  \n"," 0   IW      72 non-null     int64  \n"," 1   IF      72 non-null     int64  \n"," 2   VW      72 non-null     float64\n"," 3   FP      72 non-null     int64  \n"," 4   Depth   72 non-null     float64\n"," 5   Width   72 non-null     float64\n","dtypes: float64(3), int64(3)\n","memory usage: 3.5 KB\n"]}]},{"cell_type":"code","source":["sns.heatmap(df.corr(), annot=True)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":452},"id":"K9O3LsT3eOxt","executionInfo":{"status":"ok","timestamp":1697982708450,"user_tz":-180,"elapsed":686,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"ff18597a-8a76-4f7b-b385-9f4e2ddf4e08"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<Axes: >"]},"metadata":{},"execution_count":6},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 2 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#Подготовка датасета"],"metadata":{"id":"23U4-dLcoOte"}},{"cell_type":"code","source":["X = df.drop([\"Width\", \"Depth\"], axis=1)\n","y = df[[\"Width\", \"Depth\"]].copy()"],"metadata":{"id":"5vAqxBGeoSGW","executionInfo":{"status":"ok","timestamp":1697982722262,"user_tz":-180,"elapsed":280,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["X.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"XLTb8AhLqLEf","executionInfo":{"status":"ok","timestamp":1697982723984,"user_tz":-180,"elapsed":9,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"fe520f27-a0ed-4849-e462-b3a93d59b17e"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              IW          IF         VW          FP\n","count  72.000000   72.000000  72.000000   72.000000\n","mean   45.666667  141.333333   8.638889   78.333333\n","std     1.678363    5.145763   2.061078   21.493530\n","min    43.000000  131.000000   4.500000   50.000000\n","25%    44.000000  139.000000   8.000000   60.000000\n","50%    45.500000  141.000000   9.000000   80.000000\n","75%    47.000000  146.000000  10.000000   80.000000\n","max    49.000000  150.000000  12.000000  125.000000"],"text/html":["\n","  <div id=\"df-22d258b8-5a0d-4044-873d-b8d0a8524c98\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>IW</th>\n","      <th>IF</th>\n","      <th>VW</th>\n","      <th>FP</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>45.666667</td>\n","      <td>141.333333</td>\n","      <td>8.638889</td>\n","      <td>78.333333</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>1.678363</td>\n","      <td>5.145763</td>\n","      <td>2.061078</td>\n","      <td>21.493530</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>43.000000</td>\n","      <td>131.000000</td>\n","      <td>4.500000</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>44.000000</td>\n","      <td>139.000000</td>\n","      <td>8.000000</td>\n","      <td>60.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>45.500000</td>\n","      <td>141.000000</td>\n","      <td>9.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>47.000000</td>\n","      <td>146.000000</td>\n","      <td>10.000000</td>\n","      <td>80.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>49.000000</td>\n","      <td>150.000000</td>\n","      <td>12.000000</td>\n","      <td>125.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-22d258b8-5a0d-4044-873d-b8d0a8524c98')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-22d258b8-5a0d-4044-873d-b8d0a8524c98 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-22d258b8-5a0d-4044-873d-b8d0a8524c98');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f50cb4f9-1ac5-4184-90be-f2a38355694a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f50cb4f9-1ac5-4184-90be-f2a38355694a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f50cb4f9-1ac5-4184-90be-f2a38355694a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["y.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"JHvzarmlqNI-","executionInfo":{"status":"ok","timestamp":1697982725522,"user_tz":-180,"elapsed":373,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"1dd4d63d-efc3-4878-8e0b-110a41b064c7"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           Width      Depth\n","count  72.000000  72.000000\n","mean    1.970417   1.195556\n","std     0.279040   0.225081\n","min     1.680000   0.800000\n","25%     1.760000   1.080000\n","50%     1.840000   1.200000\n","75%     2.050000   1.290000\n","max     2.600000   1.760000"],"text/html":["\n","  <div id=\"df-478216aa-c238-4ad7-9fc9-5cdd6566d9ff\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Width</th>\n","      <th>Depth</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>72.000000</td>\n","      <td>72.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>1.970417</td>\n","      <td>1.195556</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>0.279040</td>\n","      <td>0.225081</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.680000</td>\n","      <td>0.800000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>1.760000</td>\n","      <td>1.080000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>1.840000</td>\n","      <td>1.200000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>2.050000</td>\n","      <td>1.290000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>2.600000</td>\n","      <td>1.760000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-478216aa-c238-4ad7-9fc9-5cdd6566d9ff')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-478216aa-c238-4ad7-9fc9-5cdd6566d9ff button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-478216aa-c238-4ad7-9fc9-5cdd6566d9ff');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-f9f50605-d44b-4044-9c7f-b2e6ed38157a\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-f9f50605-d44b-4044-9c7f-b2e6ed38157a')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-f9f50605-d44b-4044-9c7f-b2e6ed38157a button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":9}]},{"cell_type":"code","source":["X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.15, random_state=0)\n","\n","X_train.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"syrn5-i6q5km","executionInfo":{"status":"ok","timestamp":1697982726989,"user_tz":-180,"elapsed":345,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"4957d1b6-4828-4c2c-8e68-ef26c7edb54d"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(61, 4)"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["X_test.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"zZ-CyNsVjRhh","executionInfo":{"status":"ok","timestamp":1697982728489,"user_tz":-180,"elapsed":400,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"a19ae651-2fb7-4cde-e4fc-badd6a0df2c6"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(11, 4)"]},"metadata":{},"execution_count":11}]},{"cell_type":"markdown","source":["#Линейная регрессия"],"metadata":{"id":"AlzFcT0yj8d5"}},{"cell_type":"code","source":["model = LinearRegression()\n","model.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"uy_faHqLjZ84","executionInfo":{"status":"ok","timestamp":1697982730050,"user_tz":-180,"elapsed":432,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"dee424f2-2fa1-4e89-d34d-b2acb1d500a0"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-1 {color: black;background-color: white;}#sk-container-id-1 pre{padding: 0;}#sk-container-id-1 div.sk-toggleable {background-color: white;}#sk-container-id-1 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-1 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-1 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-1 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-1 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-1 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-1 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-1 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-1 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-1 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-1 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-1 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-1 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-1 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-1 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-1 div.sk-item {position: relative;z-index: 1;}#sk-container-id-1 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-1 div.sk-item::before, #sk-container-id-1 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-1 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-1 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-1 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-1 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-1 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-1 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-1 div.sk-label-container {text-align: center;}#sk-container-id-1 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-1 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-1\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-1\" type=\"checkbox\" checked><label for=\"sk-estimator-id-1\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["model.coef_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jURdD1LfrELf","executionInfo":{"status":"ok","timestamp":1697982731766,"user_tz":-180,"elapsed":262,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"e4c0056d-dbda-4a95-fc7a-87923dff78e8"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([[ 0.02736397,  0.00354726, -0.11816029,  0.00453759],\n","       [ 0.02438946, -0.072408  , -0.05439517, -0.0240115 ]])"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["y_pred = model.predict(X_test)"],"metadata":{"id":"jVLRm_Xekp2p","executionInfo":{"status":"ok","timestamp":1697982734880,"user_tz":-180,"elapsed":259,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["MAE = metrics.mean_absolute_error(y_test, y_pred)\n","MSE = metrics.mean_squared_error(y_test, y_pred)"],"metadata":{"id":"FL5DEa-3mBtx","executionInfo":{"status":"ok","timestamp":1697982736597,"user_tz":-180,"elapsed":245,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["MAE"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"klbH5n0GmWj5","executionInfo":{"status":"ok","timestamp":1697982737827,"user_tz":-180,"elapsed":2,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"04ea7b41-ac0f-4adc-cffa-f2b3fbe4fdaf"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.07933241385650544"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["MSE"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aiXMa5JjmYtx","executionInfo":{"status":"ok","timestamp":1697982738898,"user_tz":-180,"elapsed":238,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"f64b198e-bce3-4462-c35d-4e48d68fa7c9"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.009766549515608553"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["(1-MAE/y_train.mean())*100"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"MxZVqTT6mbtJ","executionInfo":{"status":"ok","timestamp":1697982740595,"user_tz":-180,"elapsed":1,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"ceb6b69c-c60f-486a-e9ff-333c9beb5f72"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Width    95.973644\n","Depth    93.350814\n","dtype: float64"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["y_pred.mean(axis=0)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"JbliM-SxtGaJ","executionInfo":{"status":"ok","timestamp":1697982742578,"user_tz":-180,"elapsed":238,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"b1545836-483b-4e2b-b43e-7813bd194ca2"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([1.9662264 , 1.17047709])"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["import joblib\n","\n","joblib.dump(model, 'final_test.pkl', compress = 1)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"dft8fzWOqOkc","executionInfo":{"status":"ok","timestamp":1697982803554,"user_tz":-180,"elapsed":261,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"37aa0ba7-9e47-4bc3-b33e-b0f0b6caf666"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["['final_test.pkl']"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["joblib.load(\"final_test.pkl\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":75},"id":"2YySbAfdqYPs","executionInfo":{"status":"ok","timestamp":1697982810936,"user_tz":-180,"elapsed":240,"user":{"displayName":"Максим Густомясов","userId":"13875018182189485230"}},"outputId":"17fb7312-3e12-4462-c6f5-d7418b96f80e"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["LinearRegression()"],"text/html":["<style>#sk-container-id-2 {color: black;background-color: white;}#sk-container-id-2 pre{padding: 0;}#sk-container-id-2 div.sk-toggleable {background-color: white;}#sk-container-id-2 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-2 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-2 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-2 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-2 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-2 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-2 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-2 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-2 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-2 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-2 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-2 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-2 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-2 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-2 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-2 div.sk-item {position: relative;z-index: 1;}#sk-container-id-2 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-2 div.sk-item::before, #sk-container-id-2 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-2 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-2 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-2 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-2 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-2 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-2 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-2 div.sk-label-container {text-align: center;}#sk-container-id-2 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-2 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-2\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>LinearRegression()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-2\" type=\"checkbox\" checked><label for=\"sk-estimator-id-2\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">LinearRegression</label><div class=\"sk-toggleable__content\"><pre>LinearRegression()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":21}]}]}