{"cells":[{"cell_type":"markdown","id":"5b0b42db","metadata":{"id":"5b0b42db"},"source":["# Импорт зависимостей"]},{"cell_type":"code","execution_count":null,"id":"f63343df","metadata":{"id":"f63343df"},"outputs":[],"source":["import os\n","import shutil\n","import pandas as pd\n","#!pip install tensorflow-hub\n","#!pip install tensorflow-text\n","#!pip install tf-models-official\n","\n","import tensorflow as tf\n","import tensorflow_hub as hub\n","import tensorflow_text as text\n","import tensorflow.keras as keras\n","from official.nlp import optimization\n","\n","import matplotlib.pyplot as plt"]},{"cell_type":"markdown","id":"44f63d39","metadata":{"id":"44f63d39"},"source":["# Загрузка данных, анализ и препроцессинг"]},{"cell_type":"code","execution_count":null,"id":"5d5ea6b9","metadata":{"id":"5d5ea6b9","outputId":"284179d6-5b7b-4bbd-fd03-83e49969d8ab"},"outputs":[{"name":"stdout","output_type":"stream","text":["Downloading data from https://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz\n","84131840/84125825 [==============================] - 23s 0us/step\n"]}],"source":["url = 'https://ai.stanford.edu/~amaas/data/sentiment/aclImdb_v1.tar.gz' # сайт, где хранится датасет\n","\n","dataset = tf.keras.utils.get_file('aclImdb_v1.tar.gz', url,\n","                                  untar=True, cache_dir='.',\n","                                  cache_subdir='') # загрузка датасета\n","\n","dataset_dir = os.path.join(os.path.dirname(dataset), 'aclImdb') # расположение данных\n","train_dir = os.path.join(dataset_dir, 'train') # определение пути тренировочных данных\n","test_dir = os.path.join(dataset_dir, 'test') # определение пути тренировочных данных"]},{"cell_type":"code","execution_count":null,"id":"be01f221","metadata":{"id":"be01f221"},"outputs":[],"source":["remove_dir = os.path.join(train_dir, 'unsup')\n","shutil.rmtree(remove_dir) # удалим лишние папки"]},{"cell_type":"code","execution_count":null,"id":"b05b40a6","metadata":{"id":"b05b40a6","outputId":"3509a0fd-daa5-4bdc-8ffa-c2f82dd02283"},"outputs":[{"name":"stdout","output_type":"stream","text":["Found 25000 files belonging to 2 classes.\n","Using 20000 files for training.\n","Found 25000 files belonging to 2 classes.\n","Using 5000 files for validation.\n","Found 25000 files belonging to 2 classes.\n","Классы: ['neg', 'pos']\n"]}],"source":["AUTOTUNE = tf.data.AUTOTUNE\n","batch_size = 32 # размер батча\n","seed = 42 # фиксируем случайность\n","\n","train_raw_ds = tf.keras.preprocessing.text_dataset_from_directory(\n","    train_dir,\n","    batch_size=batch_size,\n","    validation_split=0.2,\n","    subset='training',\n","    seed=seed) # формирование потока данных из папки для тренировки\n","train_ds = train_raw_ds.cache().prefetch(buffer_size=AUTOTUNE)\n","\n","val_ds = tf.keras.preprocessing.text_dataset_from_directory(\n","    train_dir,\n","    batch_size=batch_size,\n","    validation_split=0.2,\n","    subset='validation',\n","    seed=seed) # формирование потока данных из папки для валидации\n","val_ds = val_ds.cache().prefetch(buffer_size=AUTOTUNE)\n","\n","test_ds = tf.keras.preprocessing.text_dataset_from_directory(\n","    test_dir,\n","    batch_size=batch_size) # формирование потока данных из папки для теста\n","test_ds = test_ds.cache().prefetch(buffer_size=AUTOTUNE)\n","\n","class_names = train_raw_ds.class_names # выделим имена классов\n","print('Классы: {}'.format(class_names))"]},{"cell_type":"code","execution_count":null,"id":"d1ce9cf8","metadata":{"id":"d1ce9cf8","outputId":"e525e0c1-3356-44e4-a4d7-4e44e7640dc4"},"outputs":[{"name":"stdout","output_type":"stream","text":["Review: b'\"Pandemonium\" is a horror movie spoof that comes off more stupid than funny. Believe me when I tell you, I love comedies. Especially comedy spoofs. \"Airplane\", \"The Naked Gun\" trilogy, \"Blazing Saddles\", \"High Anxiety\", and \"Spaceballs\" are some of my favorite comedies that spoof a particular genre. \"Pandemonium\" is not up there with those films. Most of the scenes in this movie had me sitting there in stunned silence because the movie wasn\\'t all that funny. There are a few laughs in the film, but when you watch a comedy, you expect to laugh a lot more than a few times and that\\'s all this film has going for it. Geez, \"Scream\" had more laughs than this film and that was more of a horror film. How bizarre is that?<br /><br />*1/2 (out of four)'\n","Label : 0 - neg\n","\n","Review: b\"David Mamet is a very interesting and a very un-equal director. His first movie 'House of Games' was the one I liked best, and it set a series of films with characters whose perspective of life changes as they get into complicated situations, and so does the perspective of the viewer.<br /><br />So is 'Homicide' which from the title tries to set the mind of the viewer to the usual crime drama. The principal characters are two cops, one Jewish and one Irish who deal with a racially charged area. The murder of an old Jewish shop owner who proves to be an ancient veteran of the Israeli Independence war triggers the Jewish identity in the mind and heart of the Jewish detective.<br /><br />This is were the flaws of the film are the more obvious. The process of awakening is theatrical and hard to believe, the group of Jewish militants is operatic, and the way the detective eventually walks to the final violent confrontation is pathetic. The end of the film itself is Mamet-like smart, but disappoints from a human emotional perspective.<br /><br />Joe Mantegna and William Macy give strong performances, but the flaws of the story are too evident to be easily compensated.\"\n","Label : 0 - neg\n","\n","Review: b'Great documentary about the lives of NY firefighters during the worst terrorist attack of all time.. That reason alone is why this should be a must see collectors item.. What shocked me was not only the attacks, but the\"High Fat Diet\" and physical appearance of some of these firefighters. I think a lot of Doctors would agree with me that,in the physical shape they were in, some of these firefighters would NOT of made it to the 79th floor carrying over 60 lbs of gear. Having said that i now have a greater respect for firefighters and i realize becoming a firefighter is a life altering job. The French have a history of making great documentary\\'s and that is what this is, a Great Documentary.....'\n","Label : 1 - pos\n","\n"]}],"source":["# посмотрим на несколько обзоров\n","for text_batch, label_batch in train_ds.take(1): # загружаем один батч (текст и метку)\n","    for i in range(3): # возьмем 3 элемента из батча\n","        print('Review: {}'.format(text_batch.numpy()[i]))\n","        label = label_batch.numpy()[i]\n","        print('Label : {} - {}\\n'.format(label, class_names[label]))"]},{"cell_type":"code","execution_count":null,"id":"d6b5c53a","metadata":{"id":"d6b5c53a","outputId":"3774ae2a-1a6f-4f2f-a7d8-220d8ea10d4d"},"outputs":[{"name":"stdout","output_type":"stream","text":["Выбранная модель BERT: https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-128_A-2/1\n","Выбранная модель препроцессинга: https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3\n"]}],"source":["# Список моделей для обучения и препроцессинга\n","map_name_to_handle = {\n","    'bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_L-12_H-768_A-12/3',\n","    'bert_en_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_cased_L-12_H-768_A-12/3',\n","    'bert_multi_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_multi_cased_L-12_H-768_A-12/3',\n","    'small_bert/bert_en_uncased_L-2_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-2_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-2_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-2_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-2_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-4_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-4_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-4_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-4_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-4_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-6_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-6_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-6_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-6_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-6_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-8_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-8_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-8_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-8_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-8_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-10_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-10_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-10_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-10_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-10_H-768_A-12/1',\n","    'small_bert/bert_en_uncased_L-12_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-128_A-2/1',\n","    'small_bert/bert_en_uncased_L-12_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-256_A-4/1',\n","    'small_bert/bert_en_uncased_L-12_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-512_A-8/1',\n","    'small_bert/bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/small_bert/bert_en_uncased_L-12_H-768_A-12/1',\n","    'albert_en_base':\n","        'https://tfhub.dev/tensorflow/albert_en_base/2',\n","    'electra_small':\n","        'https://tfhub.dev/google/electra_small/2',\n","    'electra_base':\n","        'https://tfhub.dev/google/electra_base/2',\n","    'experts_pubmed':\n","        'https://tfhub.dev/google/experts/bert/pubmed/2',\n","    'experts_wiki_books':\n","        'https://tfhub.dev/google/experts/bert/wiki_books/2',\n","    'talking-heads_base':\n","        'https://tfhub.dev/tensorflow/talkheads_ggelu_bert_en_base/1',\n","}\n","\n","map_model_to_preprocess = {\n","    'bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'bert_en_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_cased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-2_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-4_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-6_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-8_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-10_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-128_A-2':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-256_A-4':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-512_A-8':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'small_bert/bert_en_uncased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'bert_multi_cased_L-12_H-768_A-12':\n","        'https://tfhub.dev/tensorflow/bert_multi_cased_preprocess/3',\n","    'albert_en_base':\n","        'https://tfhub.dev/tensorflow/albert_en_preprocess/3',\n","    'electra_small':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'electra_base':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'experts_pubmed':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'experts_wiki_books':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","    'talking-heads_base':\n","        'https://tfhub.dev/tensorflow/bert_en_uncased_preprocess/3',\n","}\n","\n","bert_model_name = 'small_bert/bert_en_uncased_L-2_H-128_A-2'  # выберем одну из моделей (самая легкая)\n","tfhub_encoder = map_name_to_handle[bert_model_name] # url-адресс для загрузки\n","tfhub_preprocess = map_model_to_preprocess[bert_model_name] # url-адресс для загрузки\n","\n","print('Выбранная модель BERT: {}'.format(tfhub_encoder))\n","print('Выбранная модель препроцессинга: {}'.format(tfhub_preprocess))"]},{"cell_type":"code","execution_count":null,"id":"d176791a","metadata":{"id":"d176791a"},"outputs":[],"source":["bert_preprocess_model = hub.KerasLayer(tfhub_preprocess) # загружаем модель для подготовки данных"]},{"cell_type":"code","execution_count":null,"id":"cd50e9e6","metadata":{"id":"cd50e9e6","outputId":"8c65faad-b22e-4b38-a8ea-776a37c7ee4c"},"outputs":[{"name":"stdout","output_type":"stream","text":["10\n","Ключи модели: ['input_mask', 'input_word_ids', 'input_type_ids']\n"]}],"source":["text_test = ['this is such an amazing movie! I absolutely love it']\n","text_preprocessed = bert_preprocess_model(text_test)\n","\n","print(len(text_test[0].split(' ')))\n","print('Ключи модели: {}'.format(list(text_preprocessed.keys())))"]},{"cell_type":"code","execution_count":null,"id":"dc973b96","metadata":{"id":"dc973b96","outputId":"8a3c9de0-5245-468b-f7e9-d2aa27882d7c"},"outputs":[{"name":"stdout","output_type":"stream","text":["Размер последовательности: (1, 128)\n","Индексы слов: [ 101 2023 2003 2107 2019 6429 3185  999 1045 7078 2293 2009  102    0\n","    0    0    0    0]\n","Входная маска: [1 1 1 1 1 1 1 1 1 1 1 1 1 0 0 0 0 0]\n","Типы индексов: [0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]\n"]}],"source":["print('Размер последовательности: {}'.format(text_preprocessed[\"input_word_ids\"].shape)) # размер входной последовательности\n","print('Индексы слов: {}'.format(text_preprocessed[\"input_word_ids\"][0, :18])) # индексы, описывающие предложение\n","print('Входная маска: {}'.format(text_preprocessed[\"input_mask\"][0, :18]))\n","print('Типы индексов: {}'.format(text_preprocessed[\"input_type_ids\"][0, :18]))"]},{"cell_type":"markdown","id":"307e6422","metadata":{"id":"307e6422"},"source":["# Построение модели"]},{"cell_type":"code","execution_count":null,"id":"2753337a","metadata":{"id":"2753337a"},"outputs":[],"source":["bert_model = hub.KerasLayer(tfhub_encoder) # Модель для тренировки"]},{"cell_type":"code","execution_count":null,"id":"056b1702","metadata":{"id":"056b1702","outputId":"332d6223-8843-45a0-f4cc-e5833bbee05c"},"outputs":[{"name":"stdout","output_type":"stream","text":["['default', 'sequence_output', 'encoder_outputs', 'pooled_output']\n"]}],"source":["bert_results = bert_model(text_preprocessed)\n","print(list(bert_results.keys()))"]},{"cell_type":"markdown","id":"f80db0ba","metadata":{"id":"f80db0ba"},"source":["Нам нужно только представление pooled_output, это своего рода эмбеддинг, который представляет текст отзыва целиком"]},{"cell_type":"code","execution_count":null,"id":"5e5efe50","metadata":{"id":"5e5efe50","outputId":"a670386f-7185-40de-c783-2dd243de9593"},"outputs":[{"name":"stdout","output_type":"stream","text":["Размер Pooled Outputs:(1, 128)\n","Значения Pooled Outputs:[-0.99997145  0.1690137  -0.99816054  0.99627674 -0.99953866  0.7923083\n"," -0.9981036  -0.95032495  0.0687331   0.01974927]\n"]}],"source":["print('Размер Pooled Outputs:{}'.format(bert_results[\"pooled_output\"].shape)) # размерность выходного вектора\n","print('Значения Pooled Outputs:{}'.format(bert_results[\"pooled_output\"][0, :10])) # первые 10 значений вектора"]},{"cell_type":"markdown","id":"26d0e876","metadata":{"id":"26d0e876"},"source":["Определим архитектуру модели классификации:"]},{"cell_type":"code","execution_count":null,"id":"e6d82768","metadata":{"id":"e6d82768"},"outputs":[],"source":["def build_classifier_model():\n","    text_input = tf.keras.layers.Input(shape=(), dtype=tf.string, name='text') # входной слой\n","    preprocessing_layer = hub.KerasLayer(tfhub_preprocess, name='preprocessing') # входной подшготовки\n","    encoder_inputs = preprocessing_layer(text_input)\n","    encoder = hub.KerasLayer(tfhub_encoder, trainable=True, name='BERT_encoder') # слой тонкой настройки BERTa\n","    outputs = encoder(encoder_inputs) # результаты из BERTa\n","    net = outputs['pooled_output']\n","    net = tf.keras.layers.Dropout(0.2)(net) # слой регуляризации\n","    net = tf.keras.layers.Dense(1, activation=None, name='classifier')(net)\n","    return tf.keras.Model(inputs=text_input, outputs=net)"]},{"cell_type":"code","execution_count":null,"id":"1d54b5dc","metadata":{"id":"1d54b5dc"},"outputs":[],"source":["classifier_model = build_classifier_model() # построим модель"]},{"cell_type":"code","execution_count":null,"id":"eef49876","metadata":{"id":"eef49876","outputId":"7508bbfb-1097-4f0d-fda1-868b883ceba7"},"outputs":[{"data":{"image/png":"\n","text/plain":["<IPython.core.display.Image object>"]},"execution_count":114,"metadata":{},"output_type":"execute_result"}],"source":["tf.keras.utils.plot_model(classifier_model) # посмотрим на архитектуру модели"]},{"cell_type":"code","execution_count":null,"id":"b05fc28e","metadata":{"id":"b05fc28e","outputId":"f1cc0a52-3869-4527-b9d8-b845e85e3259"},"outputs":[{"name":"stdout","output_type":"stream","text":["Epoch 1/5\n","625/625 [==============================] - 216s 341ms/step - loss: 0.5625 - binary_accuracy: 0.7088 - val_loss: 0.4747 - val_binary_accuracy: 0.7868\n","Epoch 2/5\n","625/625 [==============================] - 212s 340ms/step - loss: 0.4674 - binary_accuracy: 0.7847 - val_loss: 0.5015 - val_binary_accuracy: 0.7946\n","Epoch 3/5\n","625/625 [==============================] - 214s 343ms/step - loss: 0.4227 - binary_accuracy: 0.8104 - val_loss: 0.5367 - val_binary_accuracy: 0.7590\n","Epoch 4/5\n","625/625 [==============================] - 210s 336ms/step - loss: 0.4379 - binary_accuracy: 0.7975 - val_loss: 0.5309 - val_binary_accuracy: 0.7544\n","Epoch 5/5\n","625/625 [==============================] - 209s 335ms/step - loss: 0.4061 - binary_accuracy: 0.8152 - val_loss: 0.6330 - val_binary_accuracy: 0.7422\n"]}],"source":["# Определим параметры и натренируем модель\n","EPOCHS = 5\n","loss = keras.losses.BinaryCrossentropy(from_logits=True)\n","metrics = keras.metrics.BinaryAccuracy()\n","optimizer = keras.optimizers.Adam()\n","\n","classifier_model.compile(optimizer=optimizer,\n","                         loss=loss,\n","                         metrics=metrics)\n","\n","history = classifier_model.fit(x=train_ds,\n","                               validation_data=val_ds,\n","                               epochs=EPOCHS)"]},{"cell_type":"code","execution_count":null,"id":"4958d3c1","metadata":{"id":"4958d3c1","outputId":"0aa7aa33-6bdc-421b-fe41-799fcd9e1a6e"},"outputs":[{"data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"needs_background":"light"},"output_type":"display_data"}],"source":["pd.DataFrame(history.history).plot();"]},{"cell_type":"code","execution_count":null,"id":"830968f2","metadata":{"id":"830968f2","outputId":"0cec9faa-b2de-4259-8da4-e9e4ae906380"},"outputs":[{"name":"stdout","output_type":"stream","text":["782/782 [==============================] - 74s 95ms/step - loss: 0.6679 - binary_accuracy: 0.7268\n","Loss: 0.6679204702377319\n","Accuracy: 0.7267600297927856\n"]}],"source":["loss, accuracy = classifier_model.evaluate(test_ds)\n","\n","print('Loss: {}'.format(loss))\n","print('Accuracy: {}'.format(accuracy))"]},{"cell_type":"code","execution_count":null,"id":"fe701678","metadata":{"id":"fe701678","outputId":"e8ff3659-6664-48c4-952b-f8f1567ce359"},"outputs":[{"name":"stdout","output_type":"stream","text":["Результаты предсказания модели:\n","input: this is such an amazing movie!.....score: 0.9715955257415771\n","input: The movie was great!.....score: 0.9696699380874634\n","input: The movie was good......score: 0.373626172542572\n","input: The movie was okish......score: 0.2939932346343994\n","input: The movie was terrible.....score: 0.0328637957572937\n","input: Disgusting film.....score: 0.05736711621284485\n","input: I hate the movie I saw yesterday.....score: 0.431740939617157\n","\n"]}],"source":["def print_my_examples(inputs, results):\n","    \"\"\"Функция для вывода предложения и предсказания модели\"\"\"\n","    result_for_printing = ['input: {}.....score: {}'.format(inputs[i], results[i][0]) for i in range(len(inputs))]\n","    print(*result_for_printing, sep='\\n')\n","    print()\n","\n","examples = [\n","    'this is such an amazing movie!',  # Примеры предложений для предсказания\n","    'The movie was great!',\n","    'The movie was good.',\n","    'The movie was okish.',\n","    'The movie was terrible',\n","    'Disgusting film',\n","    'I hate the movie I saw yesterday',\n","]\n","\n","results = tf.sigmoid(classifier_model(tf.constant(examples))) # Применяем функцию активации для получения вероятностей\n","\n","print('Результаты предсказания модели:')\n","print_my_examples(examples, results)"]},{"cell_type":"code","execution_count":null,"id":"188c6358","metadata":{"id":"188c6358"},"outputs":[],"source":[]}],"metadata":{"kernelspec":{"display_name":"Python 3","language":"python","name":"python3"},"language_info":{"codemirror_mode":{"name":"ipython","version":3},"file_extension":".py","mimetype":"text/x-python","name":"python","nbconvert_exporter":"python","pygments_lexer":"ipython3","version":"3.9.4"},"colab":{"provenance":[{"file_id":"1UDnnOQxnLvhAKJKlsjHv2l_xqUaWjbs4","timestamp":1689748977131}],"toc_visible":true}},"nbformat":4,"nbformat_minor":5}