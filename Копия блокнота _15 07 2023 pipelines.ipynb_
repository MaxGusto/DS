{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[{"file_id":"1kaRqUaHrg8BnIPhJb2bEYPvUolM5Ho_3","timestamp":1689749340679}],"collapsed_sections":["YCuKNryGD-c0","GbxRVVfXOpOr"],"toc_visible":true},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"markdown","source":["#Sklearn pipeline"],"metadata":{"id":"YCuKNryGD-c0"}},{"cell_type":"markdown","source":["##import"],"metadata":{"id":"5R8lxi6LEWZv"}},{"cell_type":"code","execution_count":null,"metadata":{"id":"Avv5ncl794Q7"},"outputs":[],"source":["import pandas as pd\n","import numpy as np\n","from sklearn.svm import SVC #опорные вектора для классификации\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.preprocessing import LabelEncoder, StandardScaler\n","from sklearn.pipeline import Pipeline\n","from sklearn.model_selection import train_test_split"]},{"cell_type":"code","source":["!git clone https://github.com/Lasttrader/DA_repo"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"29HHecfREvlE","executionInfo":{"status":"ok","timestamp":1689418994653,"user_tz":-180,"elapsed":20,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"e998f9f1-0e25-4ef8-c937-dd2cfd5990ae"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["fatal: destination path 'DA_repo' already exists and is not an empty directory.\n"]}]},{"cell_type":"markdown","source":["##загрузка данных"],"metadata":{"id":"xh57oCOZE77a"}},{"cell_type":"code","source":["path = '/content/DA_repo/telecom_churn.csv'\n","data = pd.read_csv(path)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"8xww-JaVE-2k","executionInfo":{"status":"ok","timestamp":1689418994654,"user_tz":-180,"elapsed":15,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"2633ac48-9e14-43d0-828b-fc15e0d4f555"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  State  Account length  Area code International plan Voice mail plan  \\\n","0    KS             128        415                 No             Yes   \n","1    OH             107        415                 No             Yes   \n","2    NJ             137        415                 No              No   \n","3    OH              84        408                Yes              No   \n","4    OK              75        415                Yes              No   \n","\n","   Number vmail messages  Total day minutes  Total day calls  \\\n","0                     25              265.1              110   \n","1                     26              161.6              123   \n","2                      0              243.4              114   \n","3                      0              299.4               71   \n","4                      0              166.7              113   \n","\n","   Total day charge  Total eve minutes  Total eve calls  Total eve charge  \\\n","0             45.07              197.4               99             16.78   \n","1             27.47              195.5              103             16.62   \n","2             41.38              121.2              110             10.30   \n","3             50.90               61.9               88              5.26   \n","4             28.34              148.3              122             12.61   \n","\n","   Total night minutes  Total night calls  Total night charge  \\\n","0                244.7                 91               11.01   \n","1                254.4                103               11.45   \n","2                162.6                104                7.32   \n","3                196.9                 89                8.86   \n","4                186.9                121                8.41   \n","\n","   Total intl minutes  Total intl calls  Total intl charge  \\\n","0                10.0                 3               2.70   \n","1                13.7                 3               3.70   \n","2                12.2                 5               3.29   \n","3                 6.6                 7               1.78   \n","4                10.1                 3               2.73   \n","\n","   Customer service calls  Churn  \n","0                       1  False  \n","1                       1  False  \n","2                       0  False  \n","3                       2  False  \n","4                       3  False  "],"text/html":["\n","\n","  <div id=\"df-14e71a52-b1b8-49c4-8ab1-434180795f48\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>Account length</th>\n","      <th>Area code</th>\n","      <th>International plan</th>\n","      <th>Voice mail plan</th>\n","      <th>Number vmail messages</th>\n","      <th>Total day minutes</th>\n","      <th>Total day calls</th>\n","      <th>Total day charge</th>\n","      <th>Total eve minutes</th>\n","      <th>Total eve calls</th>\n","      <th>Total eve charge</th>\n","      <th>Total night minutes</th>\n","      <th>Total night calls</th>\n","      <th>Total night charge</th>\n","      <th>Total intl minutes</th>\n","      <th>Total intl calls</th>\n","      <th>Total intl charge</th>\n","      <th>Customer service calls</th>\n","      <th>Churn</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KS</td>\n","      <td>128</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>25</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>45.07</td>\n","      <td>197.4</td>\n","      <td>99</td>\n","      <td>16.78</td>\n","      <td>244.7</td>\n","      <td>91</td>\n","      <td>11.01</td>\n","      <td>10.0</td>\n","      <td>3</td>\n","      <td>2.70</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>OH</td>\n","      <td>107</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>26</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>27.47</td>\n","      <td>195.5</td>\n","      <td>103</td>\n","      <td>16.62</td>\n","      <td>254.4</td>\n","      <td>103</td>\n","      <td>11.45</td>\n","      <td>13.7</td>\n","      <td>3</td>\n","      <td>3.70</td>\n","      <td>1</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NJ</td>\n","      <td>137</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>41.38</td>\n","      <td>121.2</td>\n","      <td>110</td>\n","      <td>10.30</td>\n","      <td>162.6</td>\n","      <td>104</td>\n","      <td>7.32</td>\n","      <td>12.2</td>\n","      <td>5</td>\n","      <td>3.29</td>\n","      <td>0</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>OH</td>\n","      <td>84</td>\n","      <td>408</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>50.90</td>\n","      <td>61.9</td>\n","      <td>88</td>\n","      <td>5.26</td>\n","      <td>196.9</td>\n","      <td>89</td>\n","      <td>8.86</td>\n","      <td>6.6</td>\n","      <td>7</td>\n","      <td>1.78</td>\n","      <td>2</td>\n","      <td>False</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>OK</td>\n","      <td>75</td>\n","      <td>415</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>166.7</td>\n","      <td>113</td>\n","      <td>28.34</td>\n","      <td>148.3</td>\n","      <td>122</td>\n","      <td>12.61</td>\n","      <td>186.9</td>\n","      <td>121</td>\n","      <td>8.41</td>\n","      <td>10.1</td>\n","      <td>3</td>\n","      <td>2.73</td>\n","      <td>3</td>\n","      <td>False</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-14e71a52-b1b8-49c4-8ab1-434180795f48')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-48ed8d2f-8ef0-414f-b281-f1f38dc0f955\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-48ed8d2f-8ef0-414f-b281-f1f38dc0f955')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-48ed8d2f-8ef0-414f-b281-f1f38dc0f955 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-14e71a52-b1b8-49c4-8ab1-434180795f48 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-14e71a52-b1b8-49c4-8ab1-434180795f48');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":101}]},{"cell_type":"markdown","source":["##что загрузилось"],"metadata":{"id":"BtBhYa-YFKpd"}},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"h5Sw2q0lFMUi","executionInfo":{"status":"ok","timestamp":1689418995124,"user_tz":-180,"elapsed":483,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"55de6f83-5fa6-490e-81ec-0a5bb4598044"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3333 entries, 0 to 3332\n","Data columns (total 20 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   State                   3333 non-null   object \n"," 1   Account length          3333 non-null   int64  \n"," 2   Area code               3333 non-null   int64  \n"," 3   International plan      3333 non-null   object \n"," 4   Voice mail plan         3333 non-null   object \n"," 5   Number vmail messages   3333 non-null   int64  \n"," 6   Total day minutes       3333 non-null   float64\n"," 7   Total day calls         3333 non-null   int64  \n"," 8   Total day charge        3333 non-null   float64\n"," 9   Total eve minutes       3333 non-null   float64\n"," 10  Total eve calls         3333 non-null   int64  \n"," 11  Total eve charge        3333 non-null   float64\n"," 12  Total night minutes     3333 non-null   float64\n"," 13  Total night calls       3333 non-null   int64  \n"," 14  Total night charge      3333 non-null   float64\n"," 15  Total intl minutes      3333 non-null   float64\n"," 16  Total intl calls        3333 non-null   int64  \n"," 17  Total intl charge       3333 non-null   float64\n"," 18  Customer service calls  3333 non-null   int64  \n"," 19  Churn                   3333 non-null   bool   \n","dtypes: bool(1), float64(8), int64(8), object(3)\n","memory usage: 498.1+ KB\n"]}]},{"cell_type":"code","source":["data.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":399},"id":"ZVezCE_5FQlx","executionInfo":{"status":"ok","timestamp":1689418995126,"user_tz":-180,"elapsed":82,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"8eeb766c-8407-44f4-b125-c32c93acc40c"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       Account length    Area code  Number vmail messages  Total day minutes  \\\n","count     3333.000000  3333.000000            3333.000000        3333.000000   \n","mean       101.064806   437.182418               8.099010         179.775098   \n","std         39.822106    42.371290              13.688365          54.467389   \n","min          1.000000   408.000000               0.000000           0.000000   \n","25%         74.000000   408.000000               0.000000         143.700000   \n","50%        101.000000   415.000000               0.000000         179.400000   \n","75%        127.000000   510.000000              20.000000         216.400000   \n","max        243.000000   510.000000              51.000000         350.800000   \n","\n","       Total day calls  Total day charge  Total eve minutes  Total eve calls  \\\n","count      3333.000000       3333.000000        3333.000000      3333.000000   \n","mean        100.435644         30.562307         200.980348       100.114311   \n","std          20.069084          9.259435          50.713844        19.922625   \n","min           0.000000          0.000000           0.000000         0.000000   \n","25%          87.000000         24.430000         166.600000        87.000000   \n","50%         101.000000         30.500000         201.400000       100.000000   \n","75%         114.000000         36.790000         235.300000       114.000000   \n","max         165.000000         59.640000         363.700000       170.000000   \n","\n","       Total eve charge  Total night minutes  Total night calls  \\\n","count       3333.000000          3333.000000        3333.000000   \n","mean          17.083540           200.872037         100.107711   \n","std            4.310668            50.573847          19.568609   \n","min            0.000000            23.200000          33.000000   \n","25%           14.160000           167.000000          87.000000   \n","50%           17.120000           201.200000         100.000000   \n","75%           20.000000           235.300000         113.000000   \n","max           30.910000           395.000000         175.000000   \n","\n","       Total night charge  Total intl minutes  Total intl calls  \\\n","count         3333.000000         3333.000000       3333.000000   \n","mean             9.039325           10.237294          4.479448   \n","std              2.275873            2.791840          2.461214   \n","min              1.040000            0.000000          0.000000   \n","25%              7.520000            8.500000          3.000000   \n","50%              9.050000           10.300000          4.000000   \n","75%             10.590000           12.100000          6.000000   \n","max             17.770000           20.000000         20.000000   \n","\n","       Total intl charge  Customer service calls  \n","count        3333.000000             3333.000000  \n","mean            2.764581                1.562856  \n","std             0.753773                1.315491  \n","min             0.000000                0.000000  \n","25%             2.300000                1.000000  \n","50%             2.780000                1.000000  \n","75%             3.270000                2.000000  \n","max             5.400000                9.000000  "],"text/html":["\n","\n","  <div id=\"df-de1995dc-797e-41b0-b9de-1bada236bb70\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Account length</th>\n","      <th>Area code</th>\n","      <th>Number vmail messages</th>\n","      <th>Total day minutes</th>\n","      <th>Total day calls</th>\n","      <th>Total day charge</th>\n","      <th>Total eve minutes</th>\n","      <th>Total eve calls</th>\n","      <th>Total eve charge</th>\n","      <th>Total night minutes</th>\n","      <th>Total night calls</th>\n","      <th>Total night charge</th>\n","      <th>Total intl minutes</th>\n","      <th>Total intl calls</th>\n","      <th>Total intl charge</th>\n","      <th>Customer service calls</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","      <td>3333.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>101.064806</td>\n","      <td>437.182418</td>\n","      <td>8.099010</td>\n","      <td>179.775098</td>\n","      <td>100.435644</td>\n","      <td>30.562307</td>\n","      <td>200.980348</td>\n","      <td>100.114311</td>\n","      <td>17.083540</td>\n","      <td>200.872037</td>\n","      <td>100.107711</td>\n","      <td>9.039325</td>\n","      <td>10.237294</td>\n","      <td>4.479448</td>\n","      <td>2.764581</td>\n","      <td>1.562856</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>39.822106</td>\n","      <td>42.371290</td>\n","      <td>13.688365</td>\n","      <td>54.467389</td>\n","      <td>20.069084</td>\n","      <td>9.259435</td>\n","      <td>50.713844</td>\n","      <td>19.922625</td>\n","      <td>4.310668</td>\n","      <td>50.573847</td>\n","      <td>19.568609</td>\n","      <td>2.275873</td>\n","      <td>2.791840</td>\n","      <td>2.461214</td>\n","      <td>0.753773</td>\n","      <td>1.315491</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>408.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>23.200000</td>\n","      <td>33.000000</td>\n","      <td>1.040000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>74.000000</td>\n","      <td>408.000000</td>\n","      <td>0.000000</td>\n","      <td>143.700000</td>\n","      <td>87.000000</td>\n","      <td>24.430000</td>\n","      <td>166.600000</td>\n","      <td>87.000000</td>\n","      <td>14.160000</td>\n","      <td>167.000000</td>\n","      <td>87.000000</td>\n","      <td>7.520000</td>\n","      <td>8.500000</td>\n","      <td>3.000000</td>\n","      <td>2.300000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>101.000000</td>\n","      <td>415.000000</td>\n","      <td>0.000000</td>\n","      <td>179.400000</td>\n","      <td>101.000000</td>\n","      <td>30.500000</td>\n","      <td>201.400000</td>\n","      <td>100.000000</td>\n","      <td>17.120000</td>\n","      <td>201.200000</td>\n","      <td>100.000000</td>\n","      <td>9.050000</td>\n","      <td>10.300000</td>\n","      <td>4.000000</td>\n","      <td>2.780000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>127.000000</td>\n","      <td>510.000000</td>\n","      <td>20.000000</td>\n","      <td>216.400000</td>\n","      <td>114.000000</td>\n","      <td>36.790000</td>\n","      <td>235.300000</td>\n","      <td>114.000000</td>\n","      <td>20.000000</td>\n","      <td>235.300000</td>\n","      <td>113.000000</td>\n","      <td>10.590000</td>\n","      <td>12.100000</td>\n","      <td>6.000000</td>\n","      <td>3.270000</td>\n","      <td>2.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>243.000000</td>\n","      <td>510.000000</td>\n","      <td>51.000000</td>\n","      <td>350.800000</td>\n","      <td>165.000000</td>\n","      <td>59.640000</td>\n","      <td>363.700000</td>\n","      <td>170.000000</td>\n","      <td>30.910000</td>\n","      <td>395.000000</td>\n","      <td>175.000000</td>\n","      <td>17.770000</td>\n","      <td>20.000000</td>\n","      <td>20.000000</td>\n","      <td>5.400000</td>\n","      <td>9.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-de1995dc-797e-41b0-b9de-1bada236bb70')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-0f04d147-9d90-46a0-8513-79741496cc14\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f04d147-9d90-46a0-8513-79741496cc14')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-0f04d147-9d90-46a0-8513-79741496cc14 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-de1995dc-797e-41b0-b9de-1bada236bb70 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-de1995dc-797e-41b0-b9de-1bada236bb70');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":103}]},{"cell_type":"code","source":["data.describe(include = 'object')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":175},"id":"9PdSz5xhFag3","executionInfo":{"status":"ok","timestamp":1689418995127,"user_tz":-180,"elapsed":81,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"cd5783fe-f444-4d00-e4c6-ec398b376e70"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       State International plan Voice mail plan\n","count   3333               3333            3333\n","unique    51                  2               2\n","top       WV                 No              No\n","freq     106               3010            2411"],"text/html":["\n","\n","  <div id=\"df-042a83ca-da38-46b1-b448-a2ae15adcab1\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>International plan</th>\n","      <th>Voice mail plan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>3333</td>\n","      <td>3333</td>\n","      <td>3333</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>51</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>WV</td>\n","      <td>No</td>\n","      <td>No</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>106</td>\n","      <td>3010</td>\n","      <td>2411</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-042a83ca-da38-46b1-b448-a2ae15adcab1')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-397f9459-ea38-48ec-a0c3-c3b9dbce739b\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-397f9459-ea38-48ec-a0c3-c3b9dbce739b')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-397f9459-ea38-48ec-a0c3-c3b9dbce739b button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-042a83ca-da38-46b1-b448-a2ae15adcab1 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-042a83ca-da38-46b1-b448-a2ae15adcab1');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":104}]},{"cell_type":"code","source":["data['Churn'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fwbd0B7iFmeB","executionInfo":{"status":"ok","timestamp":1689418995129,"user_tz":-180,"elapsed":80,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"ee3510da-eb1b-432a-dded-a2768a847921"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["False    2850\n","True      483\n","Name: Churn, dtype: int64"]},"metadata":{},"execution_count":105}]},{"cell_type":"code","source":["data['Churn_num'] = data['Churn'].map({False : 0,\n","                                       True : 1})\n","\n","data['Int_plan'] = data['International plan'].map({'No' : 0,\n","                                                   'Yes' : 1})\n","\n","data['Voice_plan'] = data['Voice mail plan'].map({'No' : 0,\n","                                                  'Yes' : 1})\n","\n","data.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":334},"id":"kNoHSpJMFuV7","executionInfo":{"status":"ok","timestamp":1689418995131,"user_tz":-180,"elapsed":76,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"51a915c9-7e6d-4b2e-c60b-121c4bfac037"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  State  Account length  Area code International plan Voice mail plan  \\\n","0    KS             128        415                 No             Yes   \n","1    OH             107        415                 No             Yes   \n","2    NJ             137        415                 No              No   \n","3    OH              84        408                Yes              No   \n","4    OK              75        415                Yes              No   \n","\n","   Number vmail messages  Total day minutes  Total day calls  \\\n","0                     25              265.1              110   \n","1                     26              161.6              123   \n","2                      0              243.4              114   \n","3                      0              299.4               71   \n","4                      0              166.7              113   \n","\n","   Total day charge  Total eve minutes  ...  Total night calls  \\\n","0             45.07              197.4  ...                 91   \n","1             27.47              195.5  ...                103   \n","2             41.38              121.2  ...                104   \n","3             50.90               61.9  ...                 89   \n","4             28.34              148.3  ...                121   \n","\n","   Total night charge  Total intl minutes  Total intl calls  \\\n","0               11.01                10.0                 3   \n","1               11.45                13.7                 3   \n","2                7.32                12.2                 5   \n","3                8.86                 6.6                 7   \n","4                8.41                10.1                 3   \n","\n","   Total intl charge  Customer service calls  Churn  Churn_num  Int_plan  \\\n","0               2.70                       1  False          0         0   \n","1               3.70                       1  False          0         0   \n","2               3.29                       0  False          0         0   \n","3               1.78                       2  False          0         1   \n","4               2.73                       3  False          0         1   \n","\n","   Voice_plan  \n","0           1  \n","1           1  \n","2           0  \n","3           0  \n","4           0  \n","\n","[5 rows x 23 columns]"],"text/html":["\n","\n","  <div id=\"df-37c2838f-4a95-470a-bf2f-f8b263bc579f\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>Account length</th>\n","      <th>Area code</th>\n","      <th>International plan</th>\n","      <th>Voice mail plan</th>\n","      <th>Number vmail messages</th>\n","      <th>Total day minutes</th>\n","      <th>Total day calls</th>\n","      <th>Total day charge</th>\n","      <th>Total eve minutes</th>\n","      <th>...</th>\n","      <th>Total night calls</th>\n","      <th>Total night charge</th>\n","      <th>Total intl minutes</th>\n","      <th>Total intl calls</th>\n","      <th>Total intl charge</th>\n","      <th>Customer service calls</th>\n","      <th>Churn</th>\n","      <th>Churn_num</th>\n","      <th>Int_plan</th>\n","      <th>Voice_plan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KS</td>\n","      <td>128</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>25</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>45.07</td>\n","      <td>197.4</td>\n","      <td>...</td>\n","      <td>91</td>\n","      <td>11.01</td>\n","      <td>10.0</td>\n","      <td>3</td>\n","      <td>2.70</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>OH</td>\n","      <td>107</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>Yes</td>\n","      <td>26</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>27.47</td>\n","      <td>195.5</td>\n","      <td>...</td>\n","      <td>103</td>\n","      <td>11.45</td>\n","      <td>13.7</td>\n","      <td>3</td>\n","      <td>3.70</td>\n","      <td>1</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NJ</td>\n","      <td>137</td>\n","      <td>415</td>\n","      <td>No</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>41.38</td>\n","      <td>121.2</td>\n","      <td>...</td>\n","      <td>104</td>\n","      <td>7.32</td>\n","      <td>12.2</td>\n","      <td>5</td>\n","      <td>3.29</td>\n","      <td>0</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>OH</td>\n","      <td>84</td>\n","      <td>408</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>50.90</td>\n","      <td>61.9</td>\n","      <td>...</td>\n","      <td>89</td>\n","      <td>8.86</td>\n","      <td>6.6</td>\n","      <td>7</td>\n","      <td>1.78</td>\n","      <td>2</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>OK</td>\n","      <td>75</td>\n","      <td>415</td>\n","      <td>Yes</td>\n","      <td>No</td>\n","      <td>0</td>\n","      <td>166.7</td>\n","      <td>113</td>\n","      <td>28.34</td>\n","      <td>148.3</td>\n","      <td>...</td>\n","      <td>121</td>\n","      <td>8.41</td>\n","      <td>10.1</td>\n","      <td>3</td>\n","      <td>2.73</td>\n","      <td>3</td>\n","      <td>False</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>5 rows × 23 columns</p>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-37c2838f-4a95-470a-bf2f-f8b263bc579f')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-2048d72f-e3db-4a89-a638-90e9fe5579eb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2048d72f-e3db-4a89-a638-90e9fe5579eb')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-2048d72f-e3db-4a89-a638-90e9fe5579eb button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-37c2838f-4a95-470a-bf2f-f8b263bc579f button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-37c2838f-4a95-470a-bf2f-f8b263bc579f');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":106}]},{"cell_type":"code","source":["data['Churn_num'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Rb80IcL6M2cW","executionInfo":{"status":"ok","timestamp":1689418995133,"user_tz":-180,"elapsed":76,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"765010ed-c9ab-48de-92dd-cce5176a555f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0    2850\n","1     483\n","Name: Churn_num, dtype: int64"]},"metadata":{},"execution_count":107}]},{"cell_type":"code","source":["data = data.drop(['Churn','International plan', 'Voice mail plan'], axis = 1)\n","data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":305},"id":"zLWNe2jwGQfG","executionInfo":{"status":"ok","timestamp":1689418995135,"user_tz":-180,"elapsed":72,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"59ef5fe5-e953-4b7b-dd26-f69540258b5e"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  State  Account length  Area code  Number vmail messages  Total day minutes  \\\n","0    KS             128        415                     25              265.1   \n","1    OH             107        415                     26              161.6   \n","2    NJ             137        415                      0              243.4   \n","3    OH              84        408                      0              299.4   \n","4    OK              75        415                      0              166.7   \n","\n","   Total day calls  Total day charge  Total eve minutes  Total eve calls  \\\n","0              110             45.07              197.4               99   \n","1              123             27.47              195.5              103   \n","2              114             41.38              121.2              110   \n","3               71             50.90               61.9               88   \n","4              113             28.34              148.3              122   \n","\n","   Total eve charge  Total night minutes  Total night calls  \\\n","0             16.78                244.7                 91   \n","1             16.62                254.4                103   \n","2             10.30                162.6                104   \n","3              5.26                196.9                 89   \n","4             12.61                186.9                121   \n","\n","   Total night charge  Total intl minutes  Total intl calls  \\\n","0               11.01                10.0                 3   \n","1               11.45                13.7                 3   \n","2                7.32                12.2                 5   \n","3                8.86                 6.6                 7   \n","4                8.41                10.1                 3   \n","\n","   Total intl charge  Customer service calls  Churn_num  Int_plan  Voice_plan  \n","0               2.70                       1          0         0           1  \n","1               3.70                       1          0         0           1  \n","2               3.29                       0          0         0           0  \n","3               1.78                       2          0         1           0  \n","4               2.73                       3          0         1           0  "],"text/html":["\n","\n","  <div id=\"df-1652f59e-6e37-4de4-89ab-e2479ec55b89\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>State</th>\n","      <th>Account length</th>\n","      <th>Area code</th>\n","      <th>Number vmail messages</th>\n","      <th>Total day minutes</th>\n","      <th>Total day calls</th>\n","      <th>Total day charge</th>\n","      <th>Total eve minutes</th>\n","      <th>Total eve calls</th>\n","      <th>Total eve charge</th>\n","      <th>Total night minutes</th>\n","      <th>Total night calls</th>\n","      <th>Total night charge</th>\n","      <th>Total intl minutes</th>\n","      <th>Total intl calls</th>\n","      <th>Total intl charge</th>\n","      <th>Customer service calls</th>\n","      <th>Churn_num</th>\n","      <th>Int_plan</th>\n","      <th>Voice_plan</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>KS</td>\n","      <td>128</td>\n","      <td>415</td>\n","      <td>25</td>\n","      <td>265.1</td>\n","      <td>110</td>\n","      <td>45.07</td>\n","      <td>197.4</td>\n","      <td>99</td>\n","      <td>16.78</td>\n","      <td>244.7</td>\n","      <td>91</td>\n","      <td>11.01</td>\n","      <td>10.0</td>\n","      <td>3</td>\n","      <td>2.70</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>OH</td>\n","      <td>107</td>\n","      <td>415</td>\n","      <td>26</td>\n","      <td>161.6</td>\n","      <td>123</td>\n","      <td>27.47</td>\n","      <td>195.5</td>\n","      <td>103</td>\n","      <td>16.62</td>\n","      <td>254.4</td>\n","      <td>103</td>\n","      <td>11.45</td>\n","      <td>13.7</td>\n","      <td>3</td>\n","      <td>3.70</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>NJ</td>\n","      <td>137</td>\n","      <td>415</td>\n","      <td>0</td>\n","      <td>243.4</td>\n","      <td>114</td>\n","      <td>41.38</td>\n","      <td>121.2</td>\n","      <td>110</td>\n","      <td>10.30</td>\n","      <td>162.6</td>\n","      <td>104</td>\n","      <td>7.32</td>\n","      <td>12.2</td>\n","      <td>5</td>\n","      <td>3.29</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>OH</td>\n","      <td>84</td>\n","      <td>408</td>\n","      <td>0</td>\n","      <td>299.4</td>\n","      <td>71</td>\n","      <td>50.90</td>\n","      <td>61.9</td>\n","      <td>88</td>\n","      <td>5.26</td>\n","      <td>196.9</td>\n","      <td>89</td>\n","      <td>8.86</td>\n","      <td>6.6</td>\n","      <td>7</td>\n","      <td>1.78</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>OK</td>\n","      <td>75</td>\n","      <td>415</td>\n","      <td>0</td>\n","      <td>166.7</td>\n","      <td>113</td>\n","      <td>28.34</td>\n","      <td>148.3</td>\n","      <td>122</td>\n","      <td>12.61</td>\n","      <td>186.9</td>\n","      <td>121</td>\n","      <td>8.41</td>\n","      <td>10.1</td>\n","      <td>3</td>\n","      <td>2.73</td>\n","      <td>3</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-1652f59e-6e37-4de4-89ab-e2479ec55b89')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-fdf8190c-00c6-4123-a653-e984b3bc6469\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-fdf8190c-00c6-4123-a653-e984b3bc6469')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-fdf8190c-00c6-4123-a653-e984b3bc6469 button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-1652f59e-6e37-4de4-89ab-e2479ec55b89 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-1652f59e-6e37-4de4-89ab-e2479ec55b89');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":108}]},{"cell_type":"code","source":["le = LabelEncoder()\n","data['State_le'] = le.fit_transform(data['State'])\n"],"metadata":{"id":"t5Ss4JVRG6LD"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data.drop('State', axis = 1, inplace = True)"],"metadata":{"id":"8dhDuwqfIO6j"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# data['State'] = le.inverse_transform(data['State_le'])\n","# data.head()"],"metadata":{"id":"fybktFwTIaxU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["le.classes_"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7xTIIBn0Ixuk","executionInfo":{"status":"ok","timestamp":1689418995139,"user_tz":-180,"elapsed":66,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"45e2f581-132d-4375-d504-68e76a501781"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array(['AK', 'AL', 'AR', 'AZ', 'CA', 'CO', 'CT', 'DC', 'DE', 'FL', 'GA',\n","       'HI', 'IA', 'ID', 'IL', 'IN', 'KS', 'KY', 'LA', 'MA', 'MD', 'ME',\n","       'MI', 'MN', 'MO', 'MS', 'MT', 'NC', 'ND', 'NE', 'NH', 'NJ', 'NM',\n","       'NV', 'NY', 'OH', 'OK', 'OR', 'PA', 'RI', 'SC', 'SD', 'TN', 'TX',\n","       'UT', 'VA', 'VT', 'WA', 'WI', 'WV', 'WY'], dtype=object)"]},"metadata":{},"execution_count":112}]},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"xwEHyCynI7B4","executionInfo":{"status":"ok","timestamp":1689418995140,"user_tz":-180,"elapsed":63,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"f3b10a15-dcb0-4382-a238-00d7d6cfab47"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 3333 entries, 0 to 3332\n","Data columns (total 20 columns):\n"," #   Column                  Non-Null Count  Dtype  \n","---  ------                  --------------  -----  \n"," 0   Account length          3333 non-null   int64  \n"," 1   Area code               3333 non-null   int64  \n"," 2   Number vmail messages   3333 non-null   int64  \n"," 3   Total day minutes       3333 non-null   float64\n"," 4   Total day calls         3333 non-null   int64  \n"," 5   Total day charge        3333 non-null   float64\n"," 6   Total eve minutes       3333 non-null   float64\n"," 7   Total eve calls         3333 non-null   int64  \n"," 8   Total eve charge        3333 non-null   float64\n"," 9   Total night minutes     3333 non-null   float64\n"," 10  Total night calls       3333 non-null   int64  \n"," 11  Total night charge      3333 non-null   float64\n"," 12  Total intl minutes      3333 non-null   float64\n"," 13  Total intl calls        3333 non-null   int64  \n"," 14  Total intl charge       3333 non-null   float64\n"," 15  Customer service calls  3333 non-null   int64  \n"," 16  Churn_num               3333 non-null   int64  \n"," 17  Int_plan                3333 non-null   int64  \n"," 18  Voice_plan              3333 non-null   int64  \n"," 19  State_le                3333 non-null   int64  \n","dtypes: float64(8), int64(12)\n","memory usage: 520.9 KB\n"]}]},{"cell_type":"markdown","source":["##pipeline"],"metadata":{"id":"NCnG4XciI_HK"}},{"cell_type":"code","source":["#определеяем Х и у\n","y = np.array(data['Churn_num'])\n","X = data.drop('Churn_num', axis =1).values"],"metadata":{"id":"eSkZJWpdJQW5"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#создаем выборки тест и трейн\n","X_train, X_test, y_train, y_test  = train_test_split(X, y,\n","                                                     test_size = 0.2,\n","                                                     shuffle = True,\n","                                                     random_state = 42)"],"metadata":{"id":"54BCFMboI-J-"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["print(X_train.shape)\n","print(X_test.shape)\n","print(y_train.shape)\n","print(y_test.shape)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"r86Yb0nPJ8Gu","executionInfo":{"status":"ok","timestamp":1689418995457,"user_tz":-180,"elapsed":376,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"8fa33a2c-0096-4ece-f307-4554e4d49fed"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["(2666, 19)\n","(667, 19)\n","(2666,)\n","(667,)\n"]}]},{"cell_type":"code","source":["#pipeline\n","pipe = Pipeline([('scaler', StandardScaler()),\n","                 ('svc', SVC())])\n","pipe.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":125},"id":"ntQ5CuXdKP8Z","executionInfo":{"status":"ok","timestamp":1689418995458,"user_tz":-180,"elapsed":70,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"e33b8b9c-3936-4978-b3e5-c78bea32333f"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Pipeline(steps=[('scaler', StandardScaler()), ('svc', SVC())])"],"text/html":["<style>#sk-container-id-5 {color: black;background-color: white;}#sk-container-id-5 pre{padding: 0;}#sk-container-id-5 div.sk-toggleable {background-color: white;}#sk-container-id-5 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-5 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-5 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-5 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-5 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-5 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-5 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-5 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-5 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-5 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-5 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-5 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-5 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-5 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-5 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-5 div.sk-item {position: relative;z-index: 1;}#sk-container-id-5 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-5 div.sk-item::before, #sk-container-id-5 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-5 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-5 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-5 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-5 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-5 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-5 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-5 div.sk-label-container {text-align: center;}#sk-container-id-5 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-5 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-5\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>Pipeline(steps=[(&#x27;scaler&#x27;, StandardScaler()), (&#x27;svc&#x27;, SVC())])</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item sk-dashed-wrapped\"><div class=\"sk-label-container\"><div class=\"sk-label sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-11\" type=\"checkbox\" ><label for=\"sk-estimator-id-11\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">Pipeline</label><div class=\"sk-toggleable__content\"><pre>Pipeline(steps=[(&#x27;scaler&#x27;, StandardScaler()), (&#x27;svc&#x27;, SVC())])</pre></div></div></div><div class=\"sk-serial\"><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-12\" type=\"checkbox\" ><label for=\"sk-estimator-id-12\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">StandardScaler</label><div class=\"sk-toggleable__content\"><pre>StandardScaler()</pre></div></div></div><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-13\" type=\"checkbox\" ><label for=\"sk-estimator-id-13\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div></div></div>"]},"metadata":{},"execution_count":117}]},{"cell_type":"code","source":["pipe.score(X_test, y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"uW0L25fKK0rx","executionInfo":{"status":"ok","timestamp":1689418995459,"user_tz":-180,"elapsed":66,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"d15e6507-ce70-4093-b439-e2f6632e4398"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.9280359820089955"]},"metadata":{},"execution_count":118}]},{"cell_type":"markdown","source":["##SVC"],"metadata":{"id":"_v-eTIeUMQEq"}},{"cell_type":"code","source":["clfSVC = SVC()\n","\n","clfSVC.fit(X_train, y_train)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":74},"id":"di0QMMLTMRrT","executionInfo":{"status":"ok","timestamp":1689418995460,"user_tz":-180,"elapsed":59,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"cb32674c-9c81-4ea0-9606-bd3d70963a20"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["SVC()"],"text/html":["<style>#sk-container-id-6 {color: black;background-color: white;}#sk-container-id-6 pre{padding: 0;}#sk-container-id-6 div.sk-toggleable {background-color: white;}#sk-container-id-6 label.sk-toggleable__label {cursor: pointer;display: block;width: 100%;margin-bottom: 0;padding: 0.3em;box-sizing: border-box;text-align: center;}#sk-container-id-6 label.sk-toggleable__label-arrow:before {content: \"▸\";float: left;margin-right: 0.25em;color: #696969;}#sk-container-id-6 label.sk-toggleable__label-arrow:hover:before {color: black;}#sk-container-id-6 div.sk-estimator:hover label.sk-toggleable__label-arrow:before {color: black;}#sk-container-id-6 div.sk-toggleable__content {max-height: 0;max-width: 0;overflow: hidden;text-align: left;background-color: #f0f8ff;}#sk-container-id-6 div.sk-toggleable__content pre {margin: 0.2em;color: black;border-radius: 0.25em;background-color: #f0f8ff;}#sk-container-id-6 input.sk-toggleable__control:checked~div.sk-toggleable__content {max-height: 200px;max-width: 100%;overflow: auto;}#sk-container-id-6 input.sk-toggleable__control:checked~label.sk-toggleable__label-arrow:before {content: \"▾\";}#sk-container-id-6 div.sk-estimator input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-label input.sk-toggleable__control:checked~label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 input.sk-hidden--visually {border: 0;clip: rect(1px 1px 1px 1px);clip: rect(1px, 1px, 1px, 1px);height: 1px;margin: -1px;overflow: hidden;padding: 0;position: absolute;width: 1px;}#sk-container-id-6 div.sk-estimator {font-family: monospace;background-color: #f0f8ff;border: 1px dotted black;border-radius: 0.25em;box-sizing: border-box;margin-bottom: 0.5em;}#sk-container-id-6 div.sk-estimator:hover {background-color: #d4ebff;}#sk-container-id-6 div.sk-parallel-item::after {content: \"\";width: 100%;border-bottom: 1px solid gray;flex-grow: 1;}#sk-container-id-6 div.sk-label:hover label.sk-toggleable__label {background-color: #d4ebff;}#sk-container-id-6 div.sk-serial::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: 0;}#sk-container-id-6 div.sk-serial {display: flex;flex-direction: column;align-items: center;background-color: white;padding-right: 0.2em;padding-left: 0.2em;position: relative;}#sk-container-id-6 div.sk-item {position: relative;z-index: 1;}#sk-container-id-6 div.sk-parallel {display: flex;align-items: stretch;justify-content: center;background-color: white;position: relative;}#sk-container-id-6 div.sk-item::before, #sk-container-id-6 div.sk-parallel-item::before {content: \"\";position: absolute;border-left: 1px solid gray;box-sizing: border-box;top: 0;bottom: 0;left: 50%;z-index: -1;}#sk-container-id-6 div.sk-parallel-item {display: flex;flex-direction: column;z-index: 1;position: relative;background-color: white;}#sk-container-id-6 div.sk-parallel-item:first-child::after {align-self: flex-end;width: 50%;}#sk-container-id-6 div.sk-parallel-item:last-child::after {align-self: flex-start;width: 50%;}#sk-container-id-6 div.sk-parallel-item:only-child::after {width: 0;}#sk-container-id-6 div.sk-dashed-wrapped {border: 1px dashed gray;margin: 0 0.4em 0.5em 0.4em;box-sizing: border-box;padding-bottom: 0.4em;background-color: white;}#sk-container-id-6 div.sk-label label {font-family: monospace;font-weight: bold;display: inline-block;line-height: 1.2em;}#sk-container-id-6 div.sk-label-container {text-align: center;}#sk-container-id-6 div.sk-container {/* jupyter's `normalize.less` sets `[hidden] { display: none; }` but bootstrap.min.css set `[hidden] { display: none !important; }` so we also need the `!important` here to be able to override the default hidden behavior on the sphinx rendered scikit-learn.org. See: https://github.com/scikit-learn/scikit-learn/issues/21755 */display: inline-block !important;position: relative;}#sk-container-id-6 div.sk-text-repr-fallback {display: none;}</style><div id=\"sk-container-id-6\" class=\"sk-top-container\"><div class=\"sk-text-repr-fallback\"><pre>SVC()</pre><b>In a Jupyter environment, please rerun this cell to show the HTML representation or trust the notebook. <br />On GitHub, the HTML representation is unable to render, please try loading this page with nbviewer.org.</b></div><div class=\"sk-container\" hidden><div class=\"sk-item\"><div class=\"sk-estimator sk-toggleable\"><input class=\"sk-toggleable__control sk-hidden--visually\" id=\"sk-estimator-id-14\" type=\"checkbox\" checked><label for=\"sk-estimator-id-14\" class=\"sk-toggleable__label sk-toggleable__label-arrow\">SVC</label><div class=\"sk-toggleable__content\"><pre>SVC()</pre></div></div></div></div></div>"]},"metadata":{},"execution_count":119}]},{"cell_type":"code","source":["clfSVC.predict(X_test[:100])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"2IxahpojMdW3","executionInfo":{"status":"ok","timestamp":1689418995462,"user_tz":-180,"elapsed":56,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"176e5395-550b-42ca-b28c-ccb61939d727"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0])"]},"metadata":{},"execution_count":120}]},{"cell_type":"code","source":["y_test[:100]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-A1TYvZTMl2M","executionInfo":{"status":"ok","timestamp":1689418995464,"user_tz":-180,"elapsed":51,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"8842fd55-c3bd-4f1d-d395-f605a4321a9b"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["array([0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0,\n","       0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0,\n","       0, 0, 1, 1, 0, 0, 0, 1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 0, 1, 0, 1, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 0, 0,\n","       0, 1, 0, 1, 1, 0, 0, 1, 0, 0, 0, 0])"]},"metadata":{},"execution_count":121}]},{"cell_type":"markdown","source":["#Spark pipeline"],"metadata":{"id":"GbxRVVfXOpOr"}},{"cell_type":"code","source":["#установка пакетов\n","!apt-get install openjdk-11-jdk-headless -qq > /dev/null\n","!wget -q https://mirror.klaus-uwe.me/apache/spark/spark-3.2.1/spark-3.2.1-bin-hadoop2.7.tgz\n","!tar -xf spark-3.2.1-bin-hadoop2.7.tgz\n","!pip install -q findspark"],"metadata":{"id":"Eh8DtiBdOou2"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#задаём переменные окружения\n","import os\n","os.environ['JAVA_HOME'] = '/usr/lib/jvm/java-11-openjdk-amd64'\n","os.environ['SPARK_HOME'] = '/content/spark-3.2.1-bin-hadoop2.7'"],"metadata":{"id":"Oi_wfZoJPUzX"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["!pip install pyspark==3.2.1"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"PAU6D4vZPgJu","executionInfo":{"status":"ok","timestamp":1689419447384,"user_tz":-180,"elapsed":46544,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"e658f827-9885-4b6d-e151-5991411d78ec"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["Collecting pyspark==3.2.1\n","  Downloading pyspark-3.2.1.tar.gz (281.4 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m281.4/281.4 MB\u001b[0m \u001b[31m4.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Collecting py4j==0.10.9.3 (from pyspark==3.2.1)\n","  Downloading py4j-0.10.9.3-py2.py3-none-any.whl (198 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.0/199.0 kB\u001b[0m \u001b[31m19.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hBuilding wheels for collected packages: pyspark\n","  Building wheel for pyspark (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pyspark: filename=pyspark-3.2.1-py2.py3-none-any.whl size=281853629 sha256=9bd3845fc0fd9a60ce2f21d5e9b31dd9573449f06f97d241e5ec9e4a9fa4fae6\n","  Stored in directory: /root/.cache/pip/wheels/15/97/bd/52908574a60b5f8e3dc4dc5a0b5be8a59ac20986ee51c2611b\n","Successfully built pyspark\n","Installing collected packages: py4j, pyspark\n","  Attempting uninstall: py4j\n","    Found existing installation: py4j 0.10.9.7\n","    Uninstalling py4j-0.10.9.7:\n","      Successfully uninstalled py4j-0.10.9.7\n","Successfully installed py4j-0.10.9.3 pyspark-3.2.1\n"]}]},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","import findspark\n","import pyspark\n","from pyspark import SparkContext\n","from pyspark.sql import SparkSession"],"metadata":{"id":"rTWXQJdoP2mC"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##spark session"],"metadata":{"id":"l9rOtokSQOaF"}},{"cell_type":"code","source":["spark = SparkSession.builder.config(\"spark.executor.memory\", '8g')\\\n","                            .config('spark.executor.cores', '3')\\\n","                            .config('spark.cores.max', '3')\\\n","                            .config(\"spark.driver.memory\",'8g')\\\n","                            .config(\"spark.dynamicAllocation.enabled\", \"true\").getOrCreate()"],"metadata":{"id":"RVZ9GCY1QQZ9"},"execution_count":null,"outputs":[]},{"cell_type":"markdown","source":["##загружаем данные"],"metadata":{"id":"O_OyC0Q-QpGf"}},{"cell_type":"code","source":["path = '/content/DA_repo/Gazprom_stocks/02_03.csv'"],"metadata":{"id":"hOFlvrD-QNrJ"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_from_spark = spark.read.csv(path, inferSchema = True, header = True, sep = ';')\n","data_from_spark.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Bl3du94hQxRY","executionInfo":{"status":"ok","timestamp":1689421077126,"user_tz":-180,"elapsed":3644,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"8dfbdda5-ba97-42ad-8f22-514d43d87841"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+--------+------+-----+------+------+------+\n","|      DATE|    TIME|  OPEN|  MAX|   MIN| CLOSE|VOLUME|\n","+----------+--------+------+-----+------+------+------+\n","|03.01.2002|11:00:00| 373.0|374.5| 373.0| 374.5|  5064|\n","|03.01.2002|11:01:00| 374.5|375.4|374.01|374.01|  8450|\n","|03.01.2002|11:02:00|374.12|375.2| 374.1|374.65|   507|\n","|03.01.2002|11:03:00|374.65|375.0|374.03| 375.0|  1669|\n","|03.01.2002|11:04:00| 375.0|375.6| 375.0| 375.6|  4000|\n","|03.01.2002|11:05:00| 375.0|375.1|374.41| 375.0|   991|\n","|03.01.2002|11:06:00| 375.0|375.0| 374.0| 374.0|  2850|\n","|03.01.2002|11:07:00| 374.9|375.0|374.01|374.01|  6000|\n","|03.01.2002|11:08:00| 374.8|374.8| 374.8| 374.8|     0|\n","|03.01.2002|11:09:00| 374.2|374.8| 374.2| 374.8|   141|\n","+----------+--------+------+-----+------+------+------+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":["#кол-во строк\n","print(f'кол-во строк равно {data_from_spark.count()}')\n","#кол-во признаков (столбцов)\n","print(f'кол-во признаков  равно {len(data_from_spark.dtypes)}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"okcKErd8RKdT","executionInfo":{"status":"ok","timestamp":1689419898023,"user_tz":-180,"elapsed":2774,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"0e6fa7fe-4df0-4837-ddfe-8af5bceac886"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["кол-во строк равно 239332\n","кол-во признаков  равно 7\n"]}]},{"cell_type":"markdown","source":["##Spark + sql"],"metadata":{"id":"UpSHCtrpRgwU"}},{"cell_type":"code","source":["data_from_spark.registerTempTable(\"my_first_query_table\")\n","#sql\n","data_from_spark_query = spark.sql(\"SELECT TIME, VOLUME, OPEN, CLOSE \\\n","                                  FROM my_first_query_table \\\n","                                  WHERE CLOSE > 374.8\")\n","data_from_spark_query.show(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"aeUHVFlSRgOF","executionInfo":{"status":"ok","timestamp":1689420171251,"user_tz":-180,"elapsed":525,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"f57158a3-77cf-470d-805c-b4cb75c2f20b"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+------+------+------+\n","|    TIME|VOLUME|  OPEN| CLOSE|\n","+--------+------+------+------+\n","|11:03:00|  1669|374.65|   375|\n","|11:04:00|  4000|   375| 375.6|\n","|11:05:00|   991|   375|   375|\n","|11:10:00| 10314| 374.8|   375|\n","|11:11:00|  6575| 375.3| 375.4|\n","|11:12:00| 10155| 375.4|   376|\n","|11:13:00|  4133|376.99|377.99|\n","|11:14:00| 11741|377.99|   378|\n","|11:15:00|  2547|377.99| 377.9|\n","|11:16:00|  5313| 377.9|   378|\n","|11:17:00| 10705|   378|   379|\n","|11:18:00|  4108|   379| 379.3|\n","|11:19:00|  2687|379.49|379.11|\n","|11:20:00|  2565| 379.4|   379|\n","|11:21:00|  2961|   379|378.01|\n","+--------+------+------+------+\n","only showing top 15 rows\n","\n"]}]},{"cell_type":"code","source":["find_list = [374.8, 379.3, 375.4]\n","data_from_spark.registerTempTable(\"my_first_query_table\")\n","#sql\n","data_from_spark_query = spark.sql(f\"SELECT TIME, VOLUME, OPEN, CLOSE \\\n","                                  FROM my_first_query_table \\\n","                                  WHERE CLOSE IN {tuple(find_list)}\")\n","data_from_spark_query.show(15)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"SzL0PaGfSn1-","executionInfo":{"status":"ok","timestamp":1689420300244,"user_tz":-180,"elapsed":936,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"36385321-801d-4322-e93f-167163a54874"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------+------+------+-----+\n","|    TIME|VOLUME|  OPEN|CLOSE|\n","+--------+------+------+-----+\n","|11:08:00|     0| 374.8|374.8|\n","|11:09:00|   141| 374.2|374.8|\n","|11:11:00|  6575| 375.3|375.4|\n","|11:18:00|  4108|   379|379.3|\n","|13:53:00|    48|379.21|379.3|\n","|13:54:00|    35| 379.3|379.3|\n","|14:55:00|  4706|   375|375.4|\n","|17:38:00|  1475|   375|374.8|\n","|17:39:00|  6640| 375.5|374.8|\n","+--------+------+------+-----+\n","\n"]}]},{"cell_type":"markdown","source":["##spark to pandas"],"metadata":{"id":"L-bAz1n0TOQf"}},{"cell_type":"code","source":["my_pandas_df = data_from_spark_query.toPandas()\n","my_pandas_df"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":331},"id":"Og8Z34JHTM74","executionInfo":{"status":"ok","timestamp":1689420403653,"user_tz":-180,"elapsed":1839,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"df0c75d4-eee7-46a8-b7c2-478a57e64ce8"},"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["       TIME VOLUME    OPEN  CLOSE\n","0  11:08:00      0   374.8  374.8\n","1  11:09:00    141   374.2  374.8\n","2  11:11:00   6575   375.3  375.4\n","3  11:18:00   4108     379  379.3\n","4  13:53:00     48  379.21  379.3\n","5  13:54:00     35   379.3  379.3\n","6  14:55:00   4706     375  375.4\n","7  17:38:00   1475     375  374.8\n","8  17:39:00   6640   375.5  374.8"],"text/html":["\n","\n","  <div id=\"df-7bbb0be7-7676-414f-95ec-311e73025323\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>TIME</th>\n","      <th>VOLUME</th>\n","      <th>OPEN</th>\n","      <th>CLOSE</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>11:08:00</td>\n","      <td>0</td>\n","      <td>374.8</td>\n","      <td>374.8</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>11:09:00</td>\n","      <td>141</td>\n","      <td>374.2</td>\n","      <td>374.8</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>11:11:00</td>\n","      <td>6575</td>\n","      <td>375.3</td>\n","      <td>375.4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>11:18:00</td>\n","      <td>4108</td>\n","      <td>379</td>\n","      <td>379.3</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>13:53:00</td>\n","      <td>48</td>\n","      <td>379.21</td>\n","      <td>379.3</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>13:54:00</td>\n","      <td>35</td>\n","      <td>379.3</td>\n","      <td>379.3</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>14:55:00</td>\n","      <td>4706</td>\n","      <td>375</td>\n","      <td>375.4</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>17:38:00</td>\n","      <td>1475</td>\n","      <td>375</td>\n","      <td>374.8</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>17:39:00</td>\n","      <td>6640</td>\n","      <td>375.5</td>\n","      <td>374.8</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-7bbb0be7-7676-414f-95ec-311e73025323')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","\n","\n","\n","    <div id=\"df-0aaaec01-fc6c-41c1-ac38-a58f5862bffd\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0aaaec01-fc6c-41c1-ac38-a58f5862bffd')\"\n","              title=\"Suggest charts.\"\n","              style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","    </div>\n","\n","<style>\n","  .colab-df-quickchart {\n","    background-color: #E8F0FE;\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: #1967D2;\n","    height: 32px;\n","    padding: 0 0 0 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: #E2EBFA;\n","    box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: #174EA6;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","    background-color: #3B4455;\n","    fill: #D2E3FC;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart:hover {\n","    background-color: #434B5C;\n","    box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","    filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","    fill: #FFFFFF;\n","  }\n","</style>\n","\n","    <script>\n","      async function quickchart(key) {\n","        const containerElement = document.querySelector('#' + key);\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      }\n","    </script>\n","\n","      <script>\n","\n","function displayQuickchartButton(domScope) {\n","  let quickchartButtonEl =\n","    domScope.querySelector('#df-0aaaec01-fc6c-41c1-ac38-a58f5862bffd button.colab-df-quickchart');\n","  quickchartButtonEl.style.display =\n","    google.colab.kernel.accessAllowed ? 'block' : 'none';\n","}\n","\n","        displayQuickchartButton(document);\n","      </script>\n","      <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-7bbb0be7-7676-414f-95ec-311e73025323 button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-7bbb0be7-7676-414f-95ec-311e73025323');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":138}]},{"cell_type":"markdown","source":["##Spark pipeline + regression"],"metadata":{"id":"2yzFRqk_T224"}},{"cell_type":"code","source":["from pyspark.ml.linalg import Vectors\n","from pyspark.ml import Pipeline\n","from pyspark.ml.feature import MinMaxScaler, VectorAssembler"],"metadata":{"id":"W8eDp0d_THc7"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from pyspark.ml.regression import LinearRegression"],"metadata":{"id":"vUXkny88VccU"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["data_from_spark.show(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-XYpfnXJUNnH","executionInfo":{"status":"ok","timestamp":1689421087348,"user_tz":-180,"elapsed":268,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"2713f5ba-587e-4b9f-8ce7-7a7e1ac1fe0c"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+----------+--------+------+-----+------+------+------+\n","|      DATE|    TIME|  OPEN|  MAX|   MIN| CLOSE|VOLUME|\n","+----------+--------+------+-----+------+------+------+\n","|03.01.2002|11:00:00| 373.0|374.5| 373.0| 374.5|  5064|\n","|03.01.2002|11:01:00| 374.5|375.4|374.01|374.01|  8450|\n","|03.01.2002|11:02:00|374.12|375.2| 374.1|374.65|   507|\n","|03.01.2002|11:03:00|374.65|375.0|374.03| 375.0|  1669|\n","|03.01.2002|11:04:00| 375.0|375.6| 375.0| 375.6|  4000|\n","+----------+--------+------+-----+------+------+------+\n","only showing top 5 rows\n","\n"]}]},{"cell_type":"code","source":["assembler = VectorAssembler(inputCols = ['MAX', 'MIN', 'OPEN'], outputCol = 'cols_vector')#признаки в вектор\n","scaler = MinMaxScaler(inputCol = 'cols_vector', outputCol = 'scaled_cols_vector') #масштабирование данных\n","pipeline = Pipeline(stages = [assembler, scaler]) #пайплайн для масштабирования данных\n","model_scaler = pipeline.fit(data_from_spark) #обучаем пайплайн на датасета, применяя изменения, которые были описаны в стркое 1 и 2\n","data_scaled_transformed = model_scaler.transform(data_from_spark) #трансформируем данные с использованием модели пайплайна\n","print(type(data_scaled_transformed))\n","data_scaled_transformed.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Nj4rUw45UUtd","executionInfo":{"status":"ok","timestamp":1689422345991,"user_tz":-180,"elapsed":2305,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"1884a10f-50b3-4093-dbde-bd623edaf73e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pyspark.sql.dataframe.DataFrame'>\n","+----------+--------+------+-----+------+------+------+--------------------+--------------------+\n","|      DATE|    TIME|  OPEN|  MAX|   MIN| CLOSE|VOLUME|         cols_vector|  scaled_cols_vector|\n","+----------+--------+------+-----+------+------+------+--------------------+--------------------+\n","|03.01.2002|11:00:00| 373.0|374.5| 373.0| 374.5|  5064| [374.5,373.0,373.0]|[0.00133333333333...|\n","|03.01.2002|11:01:00| 374.5|375.4|374.01|374.01|  8450|[375.4,374.01,374.5]|[0.00373333333333...|\n","|03.01.2002|11:02:00|374.12|375.2| 374.1|374.65|   507|[375.2,374.1,374.12]|[0.00319999999999...|\n","|03.01.2002|11:03:00|374.65|375.0|374.03| 375.0|  1669|[375.0,374.03,374...|[0.00266666666666...|\n","|03.01.2002|11:04:00| 375.0|375.6| 375.0| 375.6|  4000| [375.6,375.0,375.0]|[0.00426666666666...|\n","|03.01.2002|11:05:00| 375.0|375.1|374.41| 375.0|   991|[375.1,374.41,375.0]|[0.00293333333333...|\n","|03.01.2002|11:06:00| 375.0|375.0| 374.0| 374.0|  2850| [375.0,374.0,375.0]|[0.00266666666666...|\n","|03.01.2002|11:07:00| 374.9|375.0|374.01|374.01|  6000|[375.0,374.01,374.9]|[0.00266666666666...|\n","|03.01.2002|11:08:00| 374.8|374.8| 374.8| 374.8|     0| [374.8,374.8,374.8]|[0.00213333333333...|\n","|03.01.2002|11:09:00| 374.2|374.8| 374.2| 374.8|   141| [374.8,374.2,374.2]|[0.00213333333333...|\n","+----------+--------+------+-----+------+------+------+--------------------+--------------------+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"markdown","source":["регрессия"],"metadata":{"id":"iSrObfBRW6eq"}},{"cell_type":"code","source":["dataset = data_scaled_transformed.select(['scaled_cols_vector', 'CLOSE'])\n","dataset.show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"hgPvXNCwW502","executionInfo":{"status":"ok","timestamp":1689422348570,"user_tz":-180,"elapsed":270,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"42bd6891-d87f-47ce-e87f-e67d5adcfed9"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+--------------------+------+\n","|  scaled_cols_vector| CLOSE|\n","+--------------------+------+\n","|[0.00133333333333...| 374.5|\n","|[0.00373333333333...|374.01|\n","|[0.00319999999999...|374.65|\n","|[0.00266666666666...| 375.0|\n","|[0.00426666666666...| 375.6|\n","|[0.00293333333333...| 375.0|\n","|[0.00266666666666...| 374.0|\n","|[0.00266666666666...|374.01|\n","|[0.00213333333333...| 374.8|\n","|[0.00213333333333...| 374.8|\n","+--------------------+------+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":["#train/test split\n","splits = dataset.randomSplit([0.8, 0.2])\n","train_df = splits[0]\n","test_df = splits[1]"],"metadata":{"id":"6CipO4TeXxsI"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["lr = LinearRegression(featuresCol='scaled_cols_vector',\n","                      labelCol = 'CLOSE',\n","                      maxIter=10,\n","                      regParam=0.3,\n","                      elasticNetParam=0.8)\n"],"metadata":{"id":"7QPLLT6jYWF0"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["# обучаем модель\n","model_lr = lr.fit(train_df)"],"metadata":{"id":"mYop1gZeY03n"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["#смотрим данные по модели\n","trainSummary = model_lr.summary\n","print(f'RMSE {trainSummary.rootMeanSquaredError}')\n","print(f'r2 {trainSummary.r2}')"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"RJnusqBiY6_g","executionInfo":{"status":"ok","timestamp":1689422360078,"user_tz":-180,"elapsed":14,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"ae447ac8-66e0-488f-caf5-4cbf6975d651"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["RMSE 0.4662667845826661\n","r2 0.9999570380583878\n"]}]},{"cell_type":"code","source":["#как получить прогнозы\n","pred_lr = model_lr.transform(test_df)\n"],"metadata":{"id":"Vk98JwuUaDQv"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["pred_lr.select(\"prediction\", 'CLOSE', \"scaled_cols_vector\").show(10)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"tR6ZxgleaMb-","executionInfo":{"status":"ok","timestamp":1689422362457,"user_tz":-180,"elapsed":2388,"user":{"displayName":"Grigoriy Sokolov","userId":"08935654732606601294"}},"outputId":"adaf4f89-6a5a-4da5-a959-4651e754768e"},"execution_count":null,"outputs":[{"output_type":"stream","name":"stdout","text":["+------------------+------+--------------------+\n","|        prediction| CLOSE|  scaled_cols_vector|\n","+------------------+------+--------------------+\n","|374.21978044760726| 373.0|[0.0,0.0,0.002680...|\n","|  374.454590558859| 373.9|[0.0,0.0022788203...|\n","|374.55204524753174| 374.0|[0.0,0.0026809651...|\n","| 374.0756660899895| 374.5|[0.00133333333333...|\n","|375.18302710840555| 374.5|[0.00186666666666...|\n","| 375.2161159059769| 374.0|[0.00266666666666...|\n","|375.91364251511635| 375.5|[0.004,0.00563002...|\n","|375.98614435313897| 375.7|[0.00453333333333...|\n","| 376.4052154318571|375.89|[0.00503999999999...|\n","| 376.0884444495952| 376.0|[0.00533333333333...|\n","+------------------+------+--------------------+\n","only showing top 10 rows\n","\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"yQS4iNSMbwP4"},"execution_count":null,"outputs":[]}]}